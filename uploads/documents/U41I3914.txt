available online at www.sciencedirect.com

sciencedirect

 procedia computer science   20  ( 2013 )  325  330 

complex adaptive systems, publication 3 

cihan h. dagli, editor in chief 

conference organized by missouri university of science and technology 

2013 - baltimore, md 

the root cause of failure in complex it projects:  

complexity itself 

kaitlynn m. whitneya, mem, charles b. danielsb, ph.d., pem, pmp,  

aold dominion university, 2401 kaufman hall, norfolk, virginia 23529, usa 
bold dominion university, 2401 kaufman hall, norfolk, virginia 23529, usa 

 

 

 
abstract 

 

 

increased  demand  for  better  technology  and  perpetual  global  expansion  continue to  provide developers  with  many  project 
opportunities for success, as well as failure. while no industry is immune from project failure, the information technology (it) 
industry is shown to be more susceptible to risk and failure than those of other industries.  agile project management, which 
facilitates adaptation to changing circumstances and alleviates rigid formal controls, has become more popular in the software 
development industry though is not entirely compatible with traditional project management approaches. 

in this paper we will examine the primary causes of it project management failure stated in modern literature, analyze these 
causes,  and  discuss  the  degree  of  complexity  within  the  projects  from  a  systemic  perspective  related  to  emergence,  non-
monotonicity,  and  non-ergodicity.  the  paper  concludes  with  some  conceptual  management  approaches  that  respond  to  these 

 

 2013 the authors. published by elsevier b.v.
selection and peer-review under responsibility of missouri university of science and technology 
keywords: project management, project failure, information technology, information systems, complex adaptive systems, complexity, pmbok,  
agile 

open access under cc by-nc-nd license.

 
 
1.  investigating failure in complex projects 

 

any undertaking that involves creating a new product or process is fraught with peril, but it projects regularly 
fail.    in  a  study  published  by  the  standish  group  of  over  50,000  it  projects  between  1992  and  2004,  only  29 
percent could be classified as successes [1].  most project failures can be classified into one or more of the following 
categories:    (1)  failure  to  meet  the  approved  schedule,  (2)  failure  to  achieve  cost  objectives,  and  (3)  failure  to 
provide  the  expected  project  scope.      these  aspects  of  failure  are  often  characteristics  within  the  following  four 
categories of failure, defined by lyytien and hirchheim [2]:  
  correspondence failure: systems design objectives or specifications not met. 
  process failure: system cannot be developed within the allocated budget or schedule. 
  interaction failure: user attitude, satisfaction, and frequency of use do not correspond to the level of system 
usage, i.e. the system is implemented out of necessity and without increased task performance. 
  expectation failure: system does not meet stakeholder requirements, expectations, or values. 

 

1877-0509  2013 the authors. published by elsevier b.v.
selection and peer-review under responsibility of missouri university of science and technology
doi: 10.1016/j.procs.2013.09.280 

open access under cc by-nc-nd license.

326  

 kaitlynn m. whitney et al.  /  procedia computer science   20  ( 2013 )  325  330 

1.1. commonly stated causes of project failures 
 

there  are  at  least  two  types  of  projects  to  consider  when  evaluating  causes  of  failure  [3].  type  1  are  well 
understood, routine projects with a clearly defined scope and few unknowns. the extent of their complexity is that 
they  may  be  intensely  detailed.   they  may  run  late  or  over  budget  though  will  only  fail  if  technical  expertise  is 
lacking  to  handle  unexpected  deviations  from the  plan.  type  2  projects,  also  considered  complex,  typically  have 
many unknowns and an unclear scope.  difficulties may arise in these projects even in the beginning, and the client 
will often not approve the project itself. planning problems, especially those dealing with defining project scope, are 
generally a major cause of failure when dealing with projects that are of the second type [3].  

 are the result 
actual failure occurs because there is a 
discrepancy between what was planned and what was accomplished, whereas planning failure occurs because there 
is a discrepancy in what was planned and what was actually achievable.  kerzner acknowledged the fact that human 
dynamics  play  an  important  role  in  project  management  failure,  citing  poor  motivation,  productivity,  and  human 
relations;  lack  of  employee  and  functional  commitment;  delayed  problem  solving;  and  unresolved  policy  and 
stakeholder issues [4].  

murray  provided  the  following  attributing  factors  of  it  project  failure,  some  which  are  characteristic  of 

tendencies observed in complex projects [5]: 
  unrealistic project scope given the available resources and project development experience. 
  improper management of scope creep, the continuous expansion of the project scope. 
  new technology that is critical to the project has not been previously developed. 
  the organization's issues are not understood. 
  custom work is needed for the organization's business activities. 

kweku ewusi-mensah, a professor of information systems at loyola marymount university, developed a unique 
view of project failure by focusing on discarded projects, in particular the ones that were cancelled by managers or 
sponsors  because  they  believed  that  the  project  would  not  be  successful.  he  projected  the  risk  factors  of 
abandonment  that  were  associated  with  these  projects  and  paralleled  them  to  those  theorized  in  software  risk 

table 1, as well as the other risk factors he found most noteworthy in literature.  

 

table 1: software management risks 

boehm, 1991 

ropponen & lyytinen, 

2000 

ewusi-mensah, 2003:  
"abandonment factors" 

 personnel shortfall and straining 
computer science abilities 
 unrealistic schedules and budgets 
 developing wrong functions, 
properties, and/or user interfaces 
 constantly changing requirements 
 shortfalls in procured components or 
labor 

 scheduling and timing 
 system functionality  
 subcontracting  
 requirements 
management  
 resource usage and 
performance  
 personnel management  

 unrealistic project goals and objectives 
 poor project team composition 
 project management and control problems 
 inadequate technical expertise 
 problematic technology base/infrastructure 
 lack of executive or support/commitment 
 changing requirements 
 cost overruns and schedule delays 

 

these stated causes of failure are indeed striking; however, many appear to be manifested as by-products of two 
enveloped  root  causes:  a  lack  of  adequate  and  sufficient  resources  (including  skilled  management  personnel 
provided for the project) and the complexity inherent within the project itself.  

recent studies in it project failure broaden the paradigm slightly by including the complexity and size of a multi-
faceted projects as a root cause [7].  project management education teaches us that identifying and considering areas 
of risk as well as their impact in the beginning and throughout the project can increase the likelihood of success.  
even  so,  the  major  frameworks  used  are  not  conducive  to  understanding  the  underlying  nature  of  systemic 
complexity inherent in complex adaptive systems (cas).   

 kaitlynn m. whitney et al.  /  procedia computer science   20  ( 2013 )  325  330 

327

1.2. complex adaptive systems (cas) definition 
 

for the purpose of this paper, we will define cas as (1) non-linear: as a whole, are unable to be determined or 
represented through the sum of their components and subsystems; (2) non-ergodic: interacting with its environment 
by receiving inputs and providing outputs, but with limited control over the outcomes; and (3) emergent: dynamic in 
that it changes and evolves its behavior in response to its inputs.  order emerges through the interaction among the 

 

 

2. the inherent complexity in projects 
 

complexity  issues  in  elaborate  it  projects  will  be  present  even  when  the  most  optimal  development 
methodologies are used to achieve the specific organizational goals.  in developing a deeper understanding of these 
issues we may hopefully be more adept in managing them. 

there are two dimensions to consider when evaluating an it project: the amount of turbulence caused by project 
volatility  and  internal  and  external  uncertainty,  and  the  degree  of  which  the  project's  structure  encompasses  a 
traditional  management  approach  [9].  external  organizations  soliciting  the  development  of  technology  systems 
essential for their operations generally do not understand system development methodology and process capabilities, 
nor  do  they  comprehend  the  necessary  upgrades  and  maintenance.  their  efforts  will  often  bring  them  into  the 
formidable territories that exemplify the nature of complex systems, which we will begin discussing in this paper.  

2.1. simple/rational system approaches to complex systems 
 

unlike a rational, simple system, the complete knowledge of a complex system exists at a tacit level that we 
will never be able to fully understand or precisely represent in a model. a representation of a complex system will 
be always be incomplete, abstracted, historical, and subject to the perception of the observer's vantage point in time 
[10]. yet traditional management approaches treat 
artifacts that 
result  from the planning and design phases of the project as part of the  formalized structure to be executed with 
encompassing  authority  of  the  project  manager.  their  bureaucracy  comes  in  the  form  of  cumbersome 
documentation  processes  that  provide  limited  benefit  as  software  design  documents  are  constantly  becoming 
outdated as requirements become  more defined.  for this reason, agile development  methodologies  have become 
more appropriate for it projects because they embrace a loosely defined design phase. 

 

 

2.2. actors in the complex system environment 

 

stafford  beer  describes  the  project  team  as  homeostats,  regulating  their  internal  environment  to  maintain 

stability with discrete goals. beer n
information  flows  -  so  that  the  firm  could  be  quickly  and  adequately  informed  of  what  the  outside  world  was 
nager's information flow is designed based on 
the baselined plan, while the project team's information flow is directly connected to their environment, in which 
- responding to changing inputs 
in real-time; reconfiguring themselves internally to change their outputs; monitoring what came back at them from 

observers,  either  through  flexibility,  which  effectively  adapts  to  change,  or  by  systemically  reducing  enough 
uncertainty (variety) within the complex system, are able to maintain or control it.   

, as we will discuss in the next section. by 
recognizing  their  powerlessness  and  inability  to  have  complete  control,  greater  value  is  emphasized  in  having 
complementary perspectives, an important aspect of working with other actors, including external stakeholders. 
 
2.3. non-linear behavior within a system 
 

anomalies, variation, and unexpected events are to be anticipated when executing projects involving complex 
systems.  as  we  saw  with  emergence,  this  can  mean  different  things  for  a  complex  system's  entities  and  their 
interrelations. the incompressible nature of the complex system implies that the behavior and interrelationships of 
the  system  are  non-monotonous  and  non-linear  [12].    this  characteristic  often  renders  the  incognizant  project 

328  

 kaitlynn m. whitney et al.  /  procedia computer science   20  ( 2013 )  325  330 

manager's efforts to detect an overall trend or pattern useless: s/he cannot anticipate future complications, delays in 
delivery, or a change in requirements.   

unexpected events also have the potential to be positive. it may have been previously estimated that more time 
would be needed to develop a particular feature,  meaning  more time is available to  work on optional features or 
finish  early.  the  outcomes  of  random  events  (negative  or  positive)  that  occur  in  projects  may  influence  future 
decisions.  if  some  random  event  creates  a  positive  outcome,  it  may  seep  into  the  project  management  body  of 
knowledge as a best practice. in the computer industry, the reuse revolution of open source software and the overall 
trend toward knowledge resources has led to efforts in storing code and other assets from prior projects in databases 
for reuse. unfortunately, this requires a deep understanding of the asset in question and the manner of reapplying the 
code to meet the new conditions. in many cases the rework can also take longer than the work, or the reapplication 
would prove to be inappropriate. skills, focus, and good requirements are necessary when assuming that any steps of 
the project will be predictable. 

 

 

2.4. non-ergodicity within a system 
 

a system that exhibits non-ergodicity is characteristically one in which a subsequent stage depends only on the 

described by markov processes. at this point, a project manager is forced to deal with a newly defined problem 
without  the  ability  to  return  to  prior  stages  for  reasons  such  as  limited  time  or  resources,  or  for  reasons  that 
regression of a functionally emergent system is either too arduous or an impossibility.  

the nature of non-ergodicity poses significant problems in complex it projects that are breaking new ground or 
require a unique design. changing requirements is natural and will make the system better,  although it can affect 
prior work completed or future planned work. these emergent requirements are generally perceived as unfavorable 
to  those  working  on  the  project.  rework  is  often  necessary  when  working  on  project  releases  that  significantly 
impact  the  functionality  of  existing  modules.  iterative  methodology  is  a  flexible  approach  for  these  situations, 
however  if  the  client  is  involved,  they  may  not  be  satisfied  with  the  project  team's  interpretation  of  the  fulfilled 
requirements during a phase and will request seemingly minor changes throughout the process while significantly 
impacting project progress.  when working on a part of the system that disables functionality of other components, 
 and without functionality until the addition or modification is reconciled with its 
interacting  components.  undesirable  results  after  these  types  of  releases  can  leave  a  project  far  behind  schedule. 
often times, in the case of an overrun budget, one must decide to either fold or push without knowing if proceeding 
will improve or severely limit other aspects of the design. some flash cutover conversions that make a significant 
change in a complex system without gradual migration also may not allow for regression.  

2.5. emergence within a system 
 

in the search for understanding and control, an observer will try to decompose a phenomenon into ever smaller 
and smaller elements, attempting to exert more control of those decomposed elements and understand the behavior 
of the system. this is ineffective for complex systems. treating them as static, decomposable hierarchies of modules 

increased risk of technical incompatibility. in these circumstances, one may use rolling wave planning, a form of 
progressive elaboration commonly used in agile  methodologies.   rolling wave planning allows  for initially high-
level planning in the wbs to evolve into more detailed planning iteratively.   

emergence invalidates the notion of modularity for complex projects, yet decomposition and integration is often 
common  practice  in  large  coding  teams.  new  components  and  interactions  also  may  not  be  compatible  with  the 
existing  system,  and  may  not  be  integrable  when  they  are  performing  in  an  optimal  way.  it  also  might  not  be 
possible to invest additional resources in obtaining system optimization and compatibility. in these cases, one may 
have to accept a loss of functionality, or prioritize attributes such as security versus stability, or speed versus access.   

3.  project management institute (pmi) resources and certifications for it project managers 

pmi, the world's largest project management certification body, is internationally recognized for its development 
of a guide to the project management body of knowledge  (pmbok) with the intentions of clearly articulating 

 kaitlynn m. whitney et al.  /  procedia computer science   20  ( 2013 )  325  330 

329

most  projects,  most  of  the  time  [8].    pmi  offers  the  project  management  professional  (pmp)  certification,  a 
globally recognized and demanded credential allowing project managers to demonstrate their competency. proficient 
demonstration and application of the knowledge and skills found in pmbok is required for pmp certification. 

pmi  states  that  many  project  management  methodologies  can  implement  its  project  management  framework 
found  in  pmbok,  including  agile  methodologies.  pmi  offers  the  agile  certified  practitioner  (pmi-acp)  to 
recognize professional proficiency in agile methodologies implemented in organizations and on projects (not to be 
misrepresented  as  a  project  management  certification).    currently  there  is  not  an  agile  body  of  knowledge 
comparable to the pmbok, although many third party references are recommended for preparation  of the pmi-
acp exam.   

 

4. discussion 

effectively  managing  the  added  complexity  of  the  agile  mind-set  is  still  a  new  research  area  as  agile 
methodology is new to university curricula.  complexity paradigms are necessary yet absent in project management 
education and credentialing frameworks.  the inclusion of complexity not only encompasses conventional beliefs 

 
concomitant  with  the  assumption  of  perfect  a  priori  knowledge  is  a  concept  the  pmi  calls  progressive 
 

elaboration [8]. 

information and more accurate es
note that traditionally, once a project is baselined, 
the baseline can only be changed through formal change control procedures, a practice that divorces the individuals 
who perform the daily work.   

although pmbok recognizes the benefits of "capitalizing" on the different backgrounds of each of the team 
, although 
members, there is no emphasis of how these unique perspectives may impa
complementarity is crucially relevant when working on a complex project as it contributes to a more wholesome and 
edifying view of the project boundaries.   analysis of the contextual plane should precede planning as it provides 
critical  input  information  for  each  of  the  key  project  management  processes.  planning  processes  defined  in 
pmbok presume nearly perfect knowledge about the relative contexts and path of the project, even being that the 
inputs  to  these  processes  provide  for  limited  basis  for  contextual  analysis  of  the  various  technical,  social, 
organizational, managerial, and political dimensions of a project.  instead, many contextual factors in pmbok are 
casually  grouped  together  under 

the  categorical  process 

inputs 

implications.  human dynamics may (more often than not) affect process inputs, especially with regard to the social 
and  political  contexts.  as  such,  the  lack  of  consideration  of  these  dimensions  may  even  result  in  selecting  a 
suboptimal methodology or ineffective project team members, essentially setting the project up to fail. 

it  is  notable  that  information  systems  project  failure  is  more  attributed  to  organizational  and  communication 
related issues than to technological issues [11].  in a study of the most valuable project management competencies 
according to it recruiters, leadership, the ability to communicate at multiple levels, verbal and written skills, and the 
ability to deal with ambiguity and change were viewed as more important than experience, work history, education, 
and expertise [14].  since many of the issues that arise in the execution of complex projects are socio-technical in 
nature and require a talented and motivated team, project management skills should be accompanied by emotional 
intelligence (eq) and spiritual intelligence (sq) to adequately address project uncertainty and complexity [15]. 

in  the  it  industry,  human-centric,  collaborative  (agile)  development  methodologies  such  as  extreme 
programming  (xp)  and  scrum  are  beginning  to  become  more  popular  in  response  to  the  shift  from  traditional 
management  practices,  modern  technology  movements,  globalization,  and  non-collocated  teamwork.    these 
methodologies are more flexible for use in volatile project environments.  they are also versatile in accommodating 
changing circumstances observed in cas projects. these contemporary  methodologies pride themselves in being 
adaptive  rather  than  predictive,  welcoming  collaboration  among  all  levels,  receptive  of  a  client's  changing 
requirements, and allowing plans and development to evolve through iterations. although this idea works well for 
small projects and teams, it is not typically successful in large, complex projects that are mission-critical and require 
more rigidity [13]. interestingly enough, emerging research is beginning to articulate the presence of complexity in 
projects and warns of the hazards of treating a complex system as a linear system [16]. 

 

5. conclusion 
 

330  

 kaitlynn m. whitney et al.  /  procedia computer science   20  ( 2013 )  325  330 

about failure; it shifts blame from humans and the technologies they develop and manage by refocusing attention on 
the powerful, enigmatic nature of a complex system.   

teams  that  perform  cohesively  and  purposefully  (under  the  guidance  of  an  effective  project  manager,  team 
leader  or  otherwise)  are  more  likely  to  successfully  identify  and  overcome  uncertainties  in  a  complex  adaptive 
system.  by developing soft skills, like empathy, influence, creativity, group facilitation, and others that are essential 
elements of successful socio-technical ventures, we stand a better chance in building understanding when dealing 
with a complex system and a dynamic environment. future project managers who take on the challenge of complex 
adaptive projects  will be  well-advised to understand human behavior and interaction, be able to  motivate project 
team members and infuse meaning into a situation, and be conscious of the higher levels of human values.   

beyond possessing the skills, knowledge, and capabilities measured by the project management professional 
(pmp) and agile certified practitioner (pmi-acp) certifications, one should also strive to attain higher levels of 
emotional intelligence (eq) and spiritual intelligence (sq), achievable through an intentional development process.  
research  topics  such  as  personality,  human  behavior,  positive  organizational  behavior,  ontology,  teleology,  and 
other branches of classical philosophy hold significant promise as a starting point for a robust curriculum to enhance 
project manager development. 
 
references 
 
1. 

johnson, j., my life is failure: 100 things you should know to be a better project leader. 2006: 
standish group international. 166. 
lyytinen, k. and r. hirschheim, information failures - a survey and classification of the empirical 
literature., in oxford surveys in information technology, p. zorkoczy, editor. 1987, oxford university 
press, inc. p. 257-309. 
meredith, j.r. and s.j. mantel, project management : a managerial approach. 2002, hoboken, n.j.: j. 
wiley. 
kerzner, h., project management : a systems approach to planning, scheduling and controlling. 2009, 
hoboken, new jersey: wiley & sons. 
murray, j.p., reducing it project complexity. information strategy: the executive's journal, 2000. 16(3): p. 
30. 
ewusi-mensah, k. software development failures anatomy of abandoned projects. 2003. 
al-ahmad, w., et al., a taxonomy of an it project failure: root causes. international management 
review, 2009. 5(1): p. 93-104. 
a guide to the project management body of knowledge (pmbok). fourth ed. 2008, newtown square, 
pa: project management institute. 
bardhan, i., s. mithas, and l. shu, performance impacts of strategy, information technology applications, 
and business process outsourcing in u.s. manufacturing plants. production & operations management, 
2007. 16(6): p. 747-762. 
skyttner, l., general systems theory : ideas & applications. 2001, singapore; river edge, n.j.: world 
scientific. 
beer, s., designing freedom. 1974, london; new york: j. wiley. 
richardson, k.a., p. cilliers, and m. lissack, complexity science: a "gray" science for the "stuff in 
between". emergence, 2001. 3(2): p. 6-18. 
khan, a.i., r.j. qurashi, and u.a. khan, a comprehensive study of commonly practiced heavy and light 
weight software methodologies. ijcsi international journal of computer science issues,, 2011. 8(4): p. 
441-450. 
stevenson, d.h. and j.a. starkweather, pm critical competency index: it execs prefer soft skills. 
international journal of project management, 2010. 28(7): p. 663-671. 
thomas, j. and t. mengel, preparing project managers to deal with complexity 
management education. international journal of project management, 2008. 26(3): p. 304-315. 
rogers, k., r. luton, et al., fostering complexity thinking in action research for change in social-
ecological systems. ecology and society. 2013, 18(2): 31. 

 advanced project 

2. 

3. 

4. 

5. 

6. 
7. 

8. 

9. 

10. 

11. 
12. 

13. 

14. 

15. 

16. 

 
 

